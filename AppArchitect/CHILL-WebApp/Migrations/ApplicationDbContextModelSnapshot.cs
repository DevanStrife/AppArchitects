// <auto-generated />
using System;
using CHILL_WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CHILL_WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CHILL_WebApp.Models.Expert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Experts");
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLabeled")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Photo_Coordinates", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float>("X1")
                        .HasColumnType("real");

                    b.Property<float>("X2")
                        .HasColumnType("real");

                    b.Property<float>("X3")
                        .HasColumnType("real");

                    b.Property<float>("X4")
                        .HasColumnType("real");

                    b.Property<float>("Y1")
                        .HasColumnType("real");

                    b.Property<float>("Y2")
                        .HasColumnType("real");

                    b.Property<float>("Y3")
                        .HasColumnType("real");

                    b.Property<float>("Y4")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Photo_Coordinates");
                });

            modelBuilder.Entity("ExpertPhoto", b =>
                {
                    b.Property<int>("ExpertsId")
                        .HasColumnType("int");

                    b.Property<int>("PhotosId")
                        .HasColumnType("int");

                    b.HasKey("ExpertsId", "PhotosId");

                    b.HasIndex("PhotosId");

                    b.ToTable("ExpertPhoto");
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Label", b =>
                {
                    b.HasOne("CHILL_WebApp.Models.Photo", "Photos")
                        .WithMany("Labels")
                        .HasForeignKey("PhotoId");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Photo_Coordinates", b =>
                {
                    b.HasOne("CHILL_WebApp.Models.Label", "Label")
                        .WithOne("Coordinates")
                        .HasForeignKey("CHILL_WebApp.Models.Photo_Coordinates", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Label");
                });

            modelBuilder.Entity("ExpertPhoto", b =>
                {
                    b.HasOne("CHILL_WebApp.Models.Expert", null)
                        .WithMany()
                        .HasForeignKey("ExpertsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CHILL_WebApp.Models.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Label", b =>
                {
                    b.Navigation("Coordinates");
                });

            modelBuilder.Entity("CHILL_WebApp.Models.Photo", b =>
                {
                    b.Navigation("Labels");
                });
#pragma warning restore 612, 618
        }
    }
}
